CREATE OR REPLACE PROCEDURE KNOWAGE.GET_NEXT_VAL_FROM_HIBERNATE(
	sequence_name IN  VARCHAR2,
	value         OUT NUMBER
) AS
BEGIN 
	DBMS_OUTPUT.PUT_LINE('Sequence name is: ' || sequence_name);

	SELECT hs.next_val INTO value FROM hibernate_sequences hs
	WHERE
		hs.sequence_name = sequence_name
		AND ROWNUM = 1; -- I don't know why it's needed

	DBMS_OUTPUT.PUT_LINE('Return value is: ' || value);

	UPDATE hibernate_sequences hs SET hs.next_val = hs.next_val + 1 WHERE hs.sequence_name = sequence_name ;
END GET_NEXT_VAL_FROM_HIBERNATE;




CREATE OR REPLACE PROCEDURE KNOWAGE.SYNC_USER_HISTORY
AS
	event_id NUMBER;
BEGIN 
	DBMS_OUTPUT.PUT_LINE('--- Syncing ----------------------------');
	
	DBMS_OUTPUT.PUT_LINE('Syncing SBI_USER_HISTORY...');
	FOR rec IN (
			SELECT su.*, su.TIME_IN AS TIME_START 
			FROM sbi_user su 
			WHERE su.USER_ID NOT IN ( SELECT DISTINCT USER_ID FROM sbi_user_history )
		)
	LOOP

		GET_NEXT_VAL_FROM_HIBERNATE('SBI_USER_HISTORY', event_id);

		DBMS_OUTPUT.PUT_LINE('Insert event ' || event_id || ' into SBI_USER_HISTORY');
	
		INSERT INTO sbi_user_history(EVENT_ID,USER_ID,PASSWORD,FULL_NAME,ID,DT_PWD_BEGIN,DT_PWD_END,FLG_PWD_BLOCKED,DT_LAST_ACCESS,IS_SUPERADMIN,USER_IN,USER_UP,USER_DE,TIME_IN,TIME_UP,TIME_DE,SBI_VERSION_IN,SBI_VERSION_UP,SBI_VERSION_DE,META_VERSION,ORGANIZATION,TIME_START)
		VALUES( event_id,rec.USER_ID,rec.PASSWORD,rec.FULL_NAME,rec.ID,rec.DT_PWD_BEGIN,rec.DT_PWD_END,rec.FLG_PWD_BLOCKED,rec.DT_LAST_ACCESS,rec.IS_SUPERADMIN,rec.USER_IN,rec.USER_UP,rec.USER_DE,rec.TIME_IN,rec.TIME_UP,rec.TIME_DE,rec.SBI_VERSION_IN,rec.SBI_VERSION_UP,rec.SBI_VERSION_DE,rec.META_VERSION,rec.ORGANIZATION,rec.TIME_START ) ;

	END LOOP;
	



	DBMS_OUTPUT.PUT_LINE('Syncing SBI_EXT_USER_ROLES_HISTORY...');

	FOR rec IN (
			SELECT su.*, su.TIME_IN AS TIME_START
			FROM SBI_EXT_USER_ROLES su 
			WHERE su.ID NOT IN ( SELECT DISTINCT ID FROM SBI_EXT_USER_ROLES_HISTORY seurh )
		)
	LOOP

		GET_NEXT_VAL_FROM_HIBERNATE('SBI_EXT_USER_ROLES_HISTORY', event_id);
	
		DBMS_OUTPUT.PUT_LINE('Insert event ' || event_id || ' into SBI_EXT_USER_ROLES_HISTORY');
	
		INSERT INTO SBI_EXT_USER_ROLES_HISTORY (EVENT_ID,ID,EXT_ROLE_ID,USER_IN,USER_UP,USER_DE,TIME_IN,TIME_UP,TIME_DE,SBI_VERSION_IN,SBI_VERSION_UP,SBI_VERSION_DE,META_VERSION,ORGANIZATION,TIME_START)
		VALUES( event_id,rec.ID,rec.EXT_ROLE_ID,rec.USER_IN,rec.USER_UP,rec.USER_DE,rec.TIME_IN,rec.TIME_UP,rec.TIME_DE,rec.SBI_VERSION_IN,rec.SBI_VERSION_UP,rec.SBI_VERSION_DE,rec.META_VERSION,rec.ORGANIZATION,rec.TIME_START ) ;

	END LOOP;
	



	DBMS_OUTPUT.PUT_LINE('Syncing SBI_USER_ATTRIBUTES_HISTORY...');
	FOR rec IN (
			SELECT su.*, su.TIME_IN AS TIME_START
			FROM SBI_USER_ATTRIBUTES su 
			WHERE su.ID NOT IN ( SELECT DISTINCT ID FROM SBI_USER_ATTRIBUTES_HISTORY )
		)
	LOOP

		GET_NEXT_VAL_FROM_HIBERNATE('SBI_USER_ATTRIBUTES_HISTORY', event_id);
	
		DBMS_OUTPUT.PUT_LINE('Insert event ' || event_id || ' into SBI_USER_ATTRIBUTES_HISTORY');
	
		INSERT INTO SBI_USER_ATTRIBUTES_HISTORY (EVENT_ID,ID,ATTRIBUTE_ID,ATTRIBUTE_VALUE,USER_IN,USER_UP,USER_DE,TIME_IN,TIME_UP,TIME_DE,SBI_VERSION_IN,SBI_VERSION_UP,SBI_VERSION_DE,META_VERSION,ORGANIZATION,TIME_START)
		VALUES( event_id,rec.ID,rec.ATTRIBUTE_ID,rec.ATTRIBUTE_VALUE,rec.USER_IN,rec.USER_UP,rec.USER_DE,rec.TIME_IN,rec.TIME_UP,rec.TIME_DE,rec.SBI_VERSION_IN,rec.SBI_VERSION_UP,rec.SBI_VERSION_DE,rec.META_VERSION,rec.ORGANIZATION,rec.TIME_START ) ;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('--- End syncing ------------------------');
END SYNC_USER_HISTORY;

-- BEGIN
-- 	SYNC_USER_HISTORY();
-- END;
